diff --git a/app-python/app.py b/app-python/app.py
index ea5527d..260b0fa 100644
--- a/app-python/app.py
+++ b/app-python/app.py
@@ -1,8 +1,5 @@
 import os
 import socket
-import signal
-import sys
-import time
 from datetime import datetime
 
 from fastapi import FastAPI, Request, Response, Cookie
@@ -23,8 +20,6 @@ DB_USER = os.getenv("DATABASE_USER", "root")
 DB_PASSWORD = os.getenv("DATABASE_PASSWORD", "example")
 DB_NAME = os.getenv("DATABASE_NAME", "whist_db")
 
-# Path to the Nginx backend map file
-BACKEND_MAP_FILE = '/etc/nginx/conf.d/backend_map.conf'
 
 # Global variable to store the server's IP
 server_ip = None
@@ -36,73 +31,6 @@ def get_server_ip():
     except socket.error:
         return "unknown"
 
-def check_ip_exists(ip):
-    """Check if the given IP exists in the backend_map.conf file."""
-    try:
-        with open(BACKEND_MAP_FILE, 'r') as file:
-            data = file.readlines()
-        for line in data:
-            if f'"{ip}"' in line:
-                return True
-        return False
-    except FileNotFoundError:
-        print(f"Backend map file {BACKEND_MAP_FILE} not found.")
-        return False
-    except Exception as e:
-        print(f"Error checking IP existence: {e}")
-        return False
-
-def update_client_ip(ip):
-    """Add the server's IP to the backend_map.conf file."""
-    print(f"Updating client IP to {ip}...")
-    try:
-        if check_ip_exists(ip):
-            print(f"IP {ip} already exists in {BACKEND_MAP_FILE}.")
-            return
-        with open(BACKEND_MAP_FILE, 'r') as file:
-            data = file.readlines()
-        # Insert the new IP mapping before the closing brace
-        insert_index = None
-        for i, line in enumerate(data):
-            if line.strip() == '}':
-                insert_index = i
-                break
-        if insert_index is not None:
-            data.insert(insert_index, f'    "{ip}" "http://{ip}:8000";\n')
-            with open(BACKEND_MAP_FILE, 'w') as file:
-                file.writelines(data)
-            print(f"Added IP {ip} to {BACKEND_MAP_FILE}.")
-        else:
-            print(f"Closing brace not found in {BACKEND_MAP_FILE}.")
-    except Exception as e:
-        print(f"Error updating client IP: {e}")
-
-def remove_client_ip(ip):
-    """Remove the server's IP from the backend_map.conf file."""
-    #wait 1 ms per las t 2 digits of the ip address
-    time.sleep(int(ip.split('.')[-1])/10)
-    try:
-        with open(BACKEND_MAP_FILE, 'r') as file:
-            data = file.readlines()
-        new_data = [line for line in data if f'"{ip}"' not in line]
-        with open(BACKEND_MAP_FILE, 'w') as file:
-            file.writelines(new_data)
-        print(f"Removed IP {ip} from {BACKEND_MAP_FILE}.")
-    except FileNotFoundError:
-        print(f"Backend map file {BACKEND_MAP_FILE} not found.")
-    except Exception as e:
-        print(f"Error removing client IP: {e}")
-
-def signal_handler(signum, frame):
-    """Handle termination signals to perform cleanup."""
-    print(f"Received signal {signum}. Shutting down gracefully...")
-    if server_ip:
-        remove_client_ip(server_ip)
-    sys.exit(0)
-
-# Register signal handlers for graceful shutdown
-signal.signal(signal.SIGTERM, signal_handler)
-signal.signal(signal.SIGINT, signal_handler)
 
 def get_db_connection():
     """Establish a connection to the MySQL database."""
@@ -304,7 +232,6 @@ def initialize_app():
     print("Global counter initialized.")
     initialize_access_log()
     print("Application initialized.")
-    update_client_ip(server_ip)
     print("Application started.")
 
 # Initialize the application on startup
diff --git a/docker-compose.yml b/docker-compose.yml
index e25e798..aba59ab 100644
--- a/docker-compose.yml
+++ b/docker-compose.yml
@@ -38,7 +38,6 @@ services:
       - DATABASE_NAME=whist_db
     volumes:
       - ./app-python/logs:/app/logs # To retain logs after container stops
-      - ./nginx-lb/backend_map.conf:/etc/nginx/conf.d/backend_map.conf # Mount the backend_map.conf
     deploy:
       replicas: 3 # Define 3 replicas for the app service
       restart_policy:
@@ -52,5 +51,4 @@ services:
       - "80:80"
     depends_on:
       - app # Ensure app service starts before nginx
-    volumes:
-      - ./nginx-lb/backend_map.conf:/etc/nginx/conf.d/backend_map.conf:rw # Mount as read-write
+  
diff --git a/nginx-lb/Dockerfile b/nginx-lb/Dockerfile
index b61cf40..cce379b 100644
--- a/nginx-lb/Dockerfile
+++ b/nginx-lb/Dockerfile
@@ -1,18 +1,9 @@
 FROM nginx:latest
 
-# Install inotify-tools
-RUN apt-get update && \
-    apt-get install -y inotify-tools && \
-    rm -rf /var/lib/apt/lists/*
 
 # Copy the Nginx server configuration to the appropriate directory
 COPY nginx.conf /etc/nginx/conf.d/default.conf
-COPY backend_map.conf /etc/nginx/conf.d/backend_map.conf
 
-# Add a script to watch for changes and reload Nginx
-COPY watch.sh /watch.sh
-RUN chmod +x /watch.sh
 
 EXPOSE 80
 
-CMD ["/watch.sh"]
diff --git a/nginx-lb/backend_map.conf b/nginx-lb/backend_map.conf
deleted file mode 100755
index 2ebe174..0000000
--- a/nginx-lb/backend_map.conf
+++ /dev/null
@@ -1,3 +0,0 @@
-map $cookie_internal_ip $backend {
-    default      "http://backend";          # Fallback backend
-}
diff --git a/nginx-lb/nginx.conf b/nginx-lb/nginx.conf
index 3fb459c..512662e 100644
--- a/nginx-lb/nginx.conf
+++ b/nginx-lb/nginx.conf
@@ -5,23 +5,20 @@
 
     access_log /var/log/nginx/access.log custom_log_format;
 
-    # Include the backend map from an external file
-    include /etc/nginx/conf.d/backend_map.conf;
-
-    upstream backend {
-        server app:8000;
-    }
 
     server {
         listen 80;
 
         location / {
-            proxy_pass $backend;
+            if ($cookie_internal_ip = "") {
+                proxy_pass http://app:8000;
+            }
+            if ($cookie_internal_ip != "") {
+                  proxy_pass http://$cookie_internal_ip:8000;
+            }
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
 
-            # If using dynamic DNS in backend URLs, uncomment and configure the resolver
-            # resolver 8.8.8.8 valid=300s;
-            # resolver_timeout 5s;
+        
         }
     }
\ No newline at end of file
diff --git a/nginx-lb/watch.sh b/nginx-lb/watch.sh
deleted file mode 100644
index 067c381..0000000
--- a/nginx-lb/watch.sh
+++ /dev/null
@@ -1,10 +0,0 @@
-#!/bin/bash
-
-# Start Nginx in the background
-nginx -g 'daemon off;' &
-
-# Watch for changes in backend_map.conf
-while inotifywait -e modify /etc/nginx/conf.d/backend_map.conf; do
-    echo "backend_map.conf changed, reloading Nginx..."
-    nginx -s reload
-done
